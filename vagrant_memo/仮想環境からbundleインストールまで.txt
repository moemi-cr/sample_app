vagrantで仮想環境作成からrails 環境構築まで

windowsのcmdで作業用フォルダに移動
>vagrant box add ボックス名

1) hyperv
2) libvirt
3) virtualbox
4) vmware_desktop
Enter your choice: 3 ←入力enter

>vagrant box list
addしたboxが追加されているか確認

>vagrant init ボックス名
vagrant初期化、vagrantfile作成

Vagrantfile編集

# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure("2") do |config|　←centos/7のボックスを使った場合
  config.vm.box = "centos/7"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
    vb.cpus = "2"
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end
  config.vm.network :"forwarded_port", guest: 3000, host: 3000
  config.vm.synced_folder "src/", "/src", nfs: true ←共有フォルダの設定
					↑nfsを使うにはvagrant plugin install vagrant-vbguestする必要がある
end

保存したら
>vagrant up
これでうまくいけばok


# インストール
$ sudo yum -y install git

# rbenvインストール
$ git clone https://github.com/sstephenson/rbenv.git ~/.rbenv

# ディレクトリ確認
$ ls -d ~/.rbenv

# インストール
$ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build

# ディレクトリ確認
$ ls -d ~/.rbenv/plugins/ruby-build

# 設定
$ echo '# rbenv' >> ~/.bash_profile
$ echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
$ echo 'eval "$(rbenv init -)"' >> ~/.bash_profile

# 確認
$ cat ~/.bash_profile

# 反映
$ exec $SHELL --login

# rubyのインストールに必要なパッケージをインストール
$ sudo yum -y install bzip2 gcc openssl-devel readline-devel zlib-devel

# バージョン確認
$ rbenv --version

# インストールできるrubyのバージョンを確認
$ rbenv install --list

# rubyインストール
$ rbenv install <version>

#インストールできたか確認
$rbenv versions

#globalで使えるようにする
$rbenv global <version>

$rbenv rehash
$ruby -v
ここでrubyのバージョンが表示されればok

!!! ruby command not foundと出た場合PATHが通っていないため
$ruby which としても
which:no ruby in ～となる

<<rubyコマンドにPATHをとおす>>
$vi ~/.bash_profile
iで編集モード
最後の行に
export PATH="~/.rbenv/shims:/usr/local/bin:$PATH"
を追加して
Escでコマンドモードに戻して:wqで保存して終了
これでrubyコマンドが使えるはず

srcに新たにディレクトリを追加
$mkdir フォルダ
$cd フォルダ
$bundle init
Gemfileが作成される
作成されたgemfileの#gem "rails" のコメントを外して保存

$bundle install --path vendor/bundle

nokogiriできないよ




